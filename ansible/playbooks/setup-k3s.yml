---
- name: k3s setup
  hosts: k8s-masters

  tasks:
    - set_fact:
        k8s_pi_cluster_home: "~/.k8s-pi-cluster"
        ip_address: "{{ hostvars[inventory_hostname]['ansible_env'].             SSH_CONNECTION.split(' ')[2] }}"
    - name: Check if we need to install k3s
      become: true
      stat:
        path: /var/lib/rancher/k3s/server/node-token
      register: out_node_token_file
    - name: Install k3s
      block:
        - name: Install k3s via shell method
          shell: curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644
      when: out_node_token_file.stat.exists != true
    - name: Create k8s pi cluster in users home directory
      file:
        path: "{{ k8s_pi_cluster_home }}"
        state: directory
      delegate_to: localhost
    - name: Get the master(s) node token file
      become: true
      fetch:
        src: /var/lib/rancher/k3s/server/node-token
        dest: "{{ k8s_pi_cluster_home }}/{{ ip_address }}-node-token"
        mode: "0740"
        flat: true
    - name: Get the k8s kubeconfig file from master
      become: true
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ k8s_pi_cluster_home }}/{{ ip_address }}-kubeconfig.yml"
        mode: "0740"
        flat: true

- name: Configure workers
  hosts: k8s-workers

  vars_prompt:
    - name: k3s_url
      prompt: What is the URL of the master node of k3s (e.g. https://myserver:6443)?
      private: false
    - name: k3s_token
      prompt: What is the token from the master node of k3s?

  tasks:
    - name: Check if k3s needs to be installed
      stat:
        path: /usr/local/bin/k3s-uninstall.sh
      register: uninstall_script_stat
    - name: Install k3s for workers, if required
      block:
        - name: Install k3s for workers
          shell: "curl -sfL https://get.k3s.io | K3S_URL={{ k3s_url }} K3S_TOKEN={{ k3s_token }} sh -"
      when: uninstall_script_stat.stat.exists != true
